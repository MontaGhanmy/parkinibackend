# Generated by Django 3.0.6 on 2020-05-28 14:47

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.CharField(max_length=60, unique=True)),
                ('nom', models.CharField(max_length=30)),
                ('prenom', models.CharField(max_length=30)),
                ('num_tel', models.CharField(max_length=30)),
                ('username', models.CharField(max_length=30)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now_add=True, verbose_name='last login')),
                ('is_prop', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Parking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_parking', models.CharField(default='Parking', max_length=30)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('nb_places', models.IntegerField()),
                ('nb_etages', models.IntegerField()),
                ('heure_d_ouverture', models.TimeField()),
                ('heure_d_fermeture', models.TimeField()),
                ('jours_d_ouverture', django.contrib.postgres.fields.ArrayField(base_field=models.BooleanField(default=False), default=list, size=8)),
                ('prix', models.IntegerField()),
                ('unite_horaire', models.CharField(choices=[('H', '1 Hour'), ('30MINS', '30 Mins'), ('15MINS', '15 Mins')], max_length=30)),
                ('adresse', models.CharField(max_length=80)),
                ('rating', models.DecimalField(decimal_places=1, default=0, max_digits=2)),
                ('securise', models.BooleanField(default=False)),
                ('barriere_auto', models.BooleanField(default=False)),
                ('couvert', models.BooleanField(default=False)),
                ('lavage', models.BooleanField(default=False)),
                ('telepeage', models.BooleanField(default=False)),
                ('WC', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parkings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_etage', models.IntegerField()),
                ('num_zone', models.CharField(max_length=10)),
                ('is_occupied', models.BooleanField(default=False)),
                ('parking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Parking')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Place')),
            ],
        ),
        migrations.CreateModel(
            name='Occupation',
            fields=[
                ('reservation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Reservation')),
                ('isCompleted', models.BooleanField(default=False)),
                ('date_debut', models.DateTimeField(auto_now=True)),
                ('date_fin', models.DateTimeField()),
            ],
            bases=('api.reservation',),
        ),
        migrations.CreateModel(
            name='Voiture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricule', models.CharField(max_length=30)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='reservation',
            name='voiture',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Voiture'),
        ),
    ]
